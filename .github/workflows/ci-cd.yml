name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
  push:
    branches:
      - main  # main Î∏åÎûúÏπòÏóê Ìë∏ÏãúÎê† Îïå Ìä∏Î¶¨Í±∞

jobs:
  build-and-push-ai-server:
    if: contains(github.event.commits[*].modified, 'ai_server/')
    name: Build and Push AI Server Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image for AI Server
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/microservice_programming:${{ github.sha }} ./ai_server
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/microservice_programming:latest ./ai_server

    - name: Push Docker image for AI Server
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/microservice_programming:${{ github.sha }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/microservice_programming:latest

  build-and-push-frontend:
    if: contains(github.event.commits[*].modified, 'streamlit_frontend/')
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image for Frontend
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/msp_term2_frontend:${{ github.sha }} ./streamlit_frontend
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/msp_term2_frontend:latest ./streamlit_frontend

    - name: Push Docker image for Frontend
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/msp_term2_frontend:${{ github.sha }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/msp_term2_frontend:latest